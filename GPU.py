from time import sleep
from register import REG
from assemb import ltrs,byt
from allVars import scrnHght,scrnWdth,displayMode,pixelSize,rect,screen,pygame,line,wid,hei
from allFuncs import num

# import pygame

ltr={byt(ltrs[key]):key for key in ltrs}

text={"A":["010","101","111","101","101"],"B":["110","101","111","101","110"],"C":["111","100","100","100","111"],"D":["110","101","101","101","110"],"E":["111","100","110","100","111"],"F":["111","100","110","100","100"],"G":["111","100","101","101","111"],"H":["101","111","101","101","101"],"I":["111","010","010","010","111"],"J":["111","010","010","010","100"],"K":["101","101","110","101","101"],"L":["100","100","100","100","111"],"M":["101","111","111","101","101"],"N":["111","101","101","101","101"],"O":["010","101","101","101","010"],"P":["111","101","111","100","100"],"Q":["111","101","111","001","001"],"R":["111","101","110","101","101"],"S":["011","100","010","001","110"],"T":["111","010","010","010","010"],"U":["101","101","101","101","111"],"V":["101","101","101","101","010"],"W":["101","101","111","111","101"],"X":["101","101","010","101","101"],"Y":["101","101","010","010","010"],"Z":["111","001","010","100","111"],
    
    "a":["000","000","010","101","011",],"b":["100","100","110","101","110",],"c":["000","000","111","100","111",],"d":["001","001","011","101","111",],"e":["110","101","111","100","111",],"f":["011","110","100","100","100",],"g":["000","011","100","101","111",],"h":["100","100","100","110","101",],"i":["000","010","000","010","010",],"j":["000","010","000","010","110",],"k":["000","101","101","110","101",],"l":["010","010","010","010","010",],"m":["000","101","111","111","101",],"n":["000","000","111","101","101",],"o":["000","000","111","101","111",],"p":["000","111","101","111","100",],"q":["000","111","101","111","001",],"r":["000","000","011","100","100",],"s":["000","000","011","010","110",],"t":["000","010","111","010","010",],"u":["000","000","101","101","111",],"v":["000","000","101","101","010",],"w":["000","000","101","111","010",],"x":["000","000","101","010","101",],"y":["000","000","101","010","100",],"z":["000","111","001","010","111",],"0":["000","000","000","000","000"],"1":["000","000","000","000","000"],"2":["000","000","000","000","000"],"3":["000","000","000","000","000"],"4":["000","000","000","000","000"],"5":["000","000","000","000","000"],"6":["000","000","000","000","000"],"7":["000","000","000","000","000"],"8":["000","000","000","000","000"],"9":["000","000","000","000","000"],"!":["010","010","010","000","010"],"#":["000","000","000","000","000"],"%":["000","000","000","000","000"],"^":["000","000","000","000","000"],"&":["000","000","000","000","000"],"*":["000","000","000","000","000"],"(":["000","000","000","000","000"],")":["000","000","000","000","000"],"_":["000","000","000","000","111"],"-":["000","000","000","111","000"],"+":["000","010","111","010","000"],"=":["000","111","000","111","000"],"{":["001","010","100","010","001"],"}":["100","010","010","010","100"],"[":["110","100","100","100","110"],"]":["011","001","001","001","011"],"\\":["100","100","010","001","001"],"|":["010","010","010","010","010"],":":["000","010","000","010","000"],";":["000","010","000","010","010"],"\"":["101","101","000","000","000"],"'":["010","010","000","000","000"],"<":["000","000","011","100","011"],"?":["011","001","010","000","010"],"/":["001","001","010","100","100"],"":["000","000","000","000","000"],"":["000","000","000","000","000"],"":["000","000","000","000","000"],
    ".":["000","000","000","000","100",],",":["000","000","000","010","100",],">":["000","000","110","001","110",],"":["000","000","000","000","000"],
    " ":["000","000","000","000","000",],
    "â˜’":["110","011","110","011","110",]
    #"1":64,"2":65,"3":66,"4":67,"5":68,"6":69,"7":70,"8":71,"9":72,"0":73,"~":74,"!":75,"@":76,"#":77,"$":78,"%":79,"^":80,"&":81,"*":82,"(":83,")":84,"_":85,"-":86,"+":87,"=":88,"{":89,"[":90,"}":91,"]":92,"|":93,"\\":94,":":95,";":96,"\"":97,"'":98,"<":99,",":100,">":101,".":102,"?":103,"/":104,
    
}
class GPU:
    def __init__(self):
        self.mx="00000000"
        self.my="00000000"
        self.sx,self.sy,self.s0,self.s1,self.sv,self.wv,self.sclr="001","010","011","100","101","110","111"
        self.disp="123"
        self.mem=[REG(val="0000111111111111") for i in range(scrnHght*scrnWdth)]
        self.curad=0
    def tick(self,clk,s,bus,op,flgs):
        if op==self.sx:
            self.mx=bus#[4:]
            # self.my=bus[:4]
            self.ad=num(self.my)*scrnWdth+num(self.mx)
            # print(self.mx,self.my)
        elif op==self.sy:
            self.my=bus
            self.ad=num(self.my)*scrnWdth+num(self.mx)
            # input(self.ad)
        elif op==self.s0:
            st=num(self.my)*scrnWdth+num(self.mx)
            if st<len(self.mem):
                self.mem[st].s=1
                self.mem[st].st("00000000")
                str(self.mem[st])
        elif op==self.s1:
            if num(self.mx)>scrnWdth:return
            st=num(self.my)*scrnWdth+num(self.mx)
            if st<len(self.mem):
                self.mem[st].s=1
                # print(bus)
                self.mem[st].st(bus)
                str(self.mem[st])
        elif op==self.sv:
            st=num(self.my)*scrnWdth+num(self.mx)
            if st<len(self.mem):
                self.mem[st].s=1
                self.mem[st].st(bus)
                str(self.mem[st])
        elif op==self.wv:
            gt=text[ltr[bus]]
            st=num(self.my)*scrnWdth+num(self.mx)
            # print(st,num(self.my),num(self.mx))
            if st<len(self.mem):
                # print(gt)
                for i in range(5):
                    self.mem[st+scrnWdth*i].s=1
                    self.mem[st+scrnWdth*i].st("0000"+(gt[i][0]*12))
                    str(self.mem[st+scrnWdth*i])
                    self.mem[st+scrnWdth*i+1].s=1
                    self.mem[st+scrnWdth*i+1].st("0000"+(gt[i][1]*12))
                    str(self.mem[st+scrnWdth*i+1])
                    self.mem[st+scrnWdth*i+2].s=1
                    self.mem[st+scrnWdth*i+2].st("0000"+(gt[i][2]*12))
                    str(self.mem[st+scrnWdth*i+2])
        elif op==self.sclr:
            for i in range(len(self.mem)):
                self.mem[i].s=1
                self.mem[i].st(bus)
                str(self.mem[i])
        if (op in [self.sv,self.s1,self.s0,self.wv] and displayMode=="auto")or op==self.disp or op==self.sclr:
            # print("\033c",end="")
            self.display(flgs)
            # sleep(0.05)
    def display(self,flgs):
        # print(flgs)
        # print("\033c",end="")
        # print("|"+("."*scrnWdth)+"|")
        # print("|"+("".join([str(i)[-1] for i in range(scrnWdth)]))+"|")
        screen.fill((255,255,255))
        for i in range(scrnHght):
            s=""
            for j in range(scrnWdth):
                mad=i*scrnWdth+j
                m=self.mem[mad].val
                str(self.mem[mad])
                # if "1" in m:print(m)
                #0000 0000r 0000g 0000b
                #black-40,red-41,green-42,yellow-43,blu-44,"prple"-45,cyan-46,white-47
                # col={0:40,1:}[num(m)]
                rng=255/15
                col=(int(num(m[4:8])*rng),int(num(m[8:12])*rng),int(num(m[12:16])*rng))
                # if "1" in m:print(r,g,b)
                # s+=(f"\033[{col}m ")
                rect((j+1)*pixelSize,(i+1)*pixelSize,pixelSize,pixelSize,col)
        for j in range(scrnWdth):
            rect(j*pixelSize,0,pixelSize,pixelSize,(0,0,0))
            rect(j*pixelSize,(scrnHght)*pixelSize,pixelSize,pixelSize,(0,0,0))
        #     line((j+1)*pixelSize,pixelSize,(j+1)*pixelSize,(scrnHght+1)*pixelSize,(0,0,0))
        for j in range(scrnHght):
            rect(0,j*pixelSize,pixelSize,pixelSize,(0,0,0))
            rect((scrnWdth)*pixelSize,j*pixelSize,pixelSize,pixelSize,(0,0,0))
        #     line(pixelSize,(j+1)*pixelSize,(scrnWdth+1)*pixelSize,(j+1)*pixelSize,(0,0,0))
        pygame.display.flip()
        # print(self.ad,num(self.my)*scrnWdth+num(self.mx))