setFile("4x6.fnt")
var font_w=0
var font_h=0
var font_bits=0
font_w=getData(0)
font_h=getData(1)
font_bits=getData(2)

var hed_x=1
var hed_y=2
hed_y-=1
var hed_d=1
var tl_x=1
var tl_y=1
var tl_d=1
var ky=0

var add_tail=1
# fill(0,15,0)
background(15,15,15)
flag mainLoop
ky=key()
# debug(ky)
if ky==40
    # tl_d=hed_d
    hed_d=0
ifd
if ky==41
    # tl_d=hed_d
    hed_d=1
ifd
if ky==51
    # tl_d=hed_d
    hed_d=2
ifd
if ky==50
    # tl_d=hed_d
    hed_d=3
ifd
tl_d=getPxl(tl_x,tl_y)
# debug(tl_d,0)
# fill(0,15,15)
# pxl(tl_x,tl_y)
if hed_d==0
    fill(0,0,0)
    hed_y-=1
    # debug(hed_y,0)
ifd
if hed_d==1
    fill(0,0,1)
    hed_x+=1
ifd
if hed_d==2
    fill(0,0,2)
    hed_y+=1
ifd
if hed_d==3
    fill(0,0,3)
    hed_x-=1
ifd
pxl(hed_x,hed_y)
disp()
if add_tail==0
    if tl_d==0
        tl_y-=1
    ifd
    if tl_d==1
        tl_x+=1
    ifd
    if tl_d==2
        tl_y+=1
    ifd
    if tl_d==3
        tl_x-=1
    ifd
ifd
if hed_x==0
    goto ded
ifd
if hed_x==width
    goto ded
ifd
if hed_y==0
    goto ded
ifd
if hed_y==height
    goto ded
ifd
# debug(x)
# pxl(x,10)
disp()
goto mainLoop

flag ded
fill(15,0,0)
print("Y",5,1)
print("o",10,1)
print("u",15,1)
print("D",25,1)
print("i",30,1)
print("e",35,1)
print("d",40,1)
print("!",45,1)

def print(print_text,print_x,print_y)
    # pxl(print_text,0)
    var print_tx=print_x
    var print_ty=print_y
    var print_data=print_text
    # debug(print_data)
    print_data=mult(print_data,font_bits)
    # debug(print_data)
    print_data=add(print_data,3)
    # print_data=add(print_data,3)
    # debug(print_data)
    var print_bit=0
    for print_i 0 <font_bits +=1
        print_data=add(print_data,print_i)
        print_bit=getData(print_data)
        var print_temp=print_bit
        print_temp=SHL(print_temp,0)
        print_temp=SHR(print_temp,12)
        printOne(print_temp,print_x,print_y)
        print_y+=1
        print_temp=print_bit
        print_temp=SHL(print_temp,4)
        print_temp=SHR(print_temp,12)
        printOne(print_temp,print_x,print_y)
        print_y+=1
        print_temp=print_bit
        print_temp=SHL(print_temp,8)
        print_temp=SHR(print_temp,12)
        printOne(print_temp,print_x,print_y)
        print_y+=1
        print_temp=print_bit
        print_temp=SHL(print_temp,12)
        print_temp=SHR(print_temp,12)
        printOne(print_temp,print_x,print_y)
        print_y+=1
    frd
    # disp()
fcd
def printOne(printOne_val,printOne_x,printOne_y)
    # debug(printOne_val)
    if printOne_val>7
        pxl(printOne_x,printOne_y)
        printOne_val-=8
    ifd
    printOne_x+=1
    if printOne_val>3
        pxl(printOne_x,printOne_y)
        printOne_val-=4
    ifd
    printOne_x+=1
    if printOne_val>1
        pxl(printOne_x,printOne_y)
        printOne_val-=2
    ifd
    printOne_x+=1
    if printOne_val>0
        pxl(printOne_x,printOne_y)
    ifd
    printOne_x+=1

fcd
def mult(mult_a,mult_b)
    var mult_x=0
    var mult_a1=0
    var mult_b1=0
    mult_a1=mult_a
    mult_b1=mult_b
    if mult_a>mult_b
        mult_a1=mult_a
        mult_b1=mult_b
    ifd
    if mult_b>mult_a
        mult_a1=mult_b
        mult_b1=mult_a
    ifd
    # if mult_b==mult_a
    #     mult_a1=mult_a
    #     mult_b1=mult_b
    # ifd
    for mult_i 0 <mult_b1 +=1
        # shl(mult_x)
        mult_x+=mult_a1
    frd
    return mult_x
fcd
def add(add_a,add_b)
    add_a+=add_b
    return add_a
fcd
def div(div_a,div_b)
    var div_t=0
    while div_a>div_b
        div_a-=div_b
        div_t+=1
    whd
    # pxl(div_t,3)
    return div_t
fcd
def sub(sub_a,sub_b)
    sub_a-=sub_b
    return sub_a
fcd
def fill(fill_red,fill_green,fill_blue) 
    var fill_temp=0
    # fill_red=div(fill_red,17)
    # fill_green=div(fill_green,17)
    # fill_blue=div(fill_green,17)
    COLOUR=fill_blue
    fill_temp=mult(fill_green,16)
    COLOUR=add(COLOUR,fill_temp)
    fill_temp=mult(fill_red,256)
    # fill_temp=mult(fill_temp,16)
    COLOUR=add(COLOUR,fill_temp)
fcd